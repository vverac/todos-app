{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/todo-app/src/components/Todo.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  let {\n    todo,\n    todoDelete,\n    todoToogleCompleted\n  } = _ref;\n  //recibimos la propiedad todoDelete y como la usaremos? al hacer \n  // click en eliminar se dispare un evento que llame la funcion, vamos al boton eliminar\n  // recibimos la propiedad todoToogleCompleted para usarla en el boton terminar\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body \",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title text-right\",\n        children: [todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          // en el evento onClick debe ejecutar la funcion todoToogleCompleted la que recibe como argumento el id del todo que qqueremos marcaar como  compltado\n          // recordar que sin funcion de flecha la funcion se ejecutaria auatomaticamente por recibir un argumento y eso no lo queremos\n          className: \"btn btn-sm btn-outline-success ml-2\",\n          children: [\"onClick=\", () => todoToogleCompleted(todo.id), \"Terminar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text text-right\",\n        children: todo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-primary\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          //llamamos al todoDelete que es una funcion que recibe un argumento si vemos en App recibe el id del todo que vamos a eliminar\n          // y aca lo tenemos dentro del props todo\n          onClick: () => todoDelete(todo.id) // ahora no se ven los todos y es por que cucando llamammos una funcion que recibe un argumento se ejecuta automaticamente una vez\n          // si fuese una funcion sin argumento nos pasria esto pero necesitamos enviar ese argumento y la solucion es retornar un arrowfunction que devuelva esta otra funcion(la que acabamos de escribir) \n          ,\n          className: \"btn btn-sm btn-outline-danger\",\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","Todo","todo","todoDelete","todoToogleCompleted","title","id","description"],"sources":["/Users/viviana/Desktop/ejercicios/todo-app/src/components/Todo.js"],"sourcesContent":["import React from 'react'\n\nfunction Todo({ todo, todoDelete, todoToogleCompleted }) { //recibimos la propiedad todoDelete y como la usaremos? al hacer \n    // click en eliminar se dispare un evento que llame la funcion, vamos al boton eliminar\n    // recibimos la propiedad todoToogleCompleted para usarla en el boton terminar\n\n    return (\n        <div className='card mt-2'>\n            <div className='card-body '>\n                <h3 className='card-title text-right'>\n                    {todo.title}\n                    <button\n                        // en el evento onClick debe ejecutar la funcion todoToogleCompleted la que recibe como argumento el id del todo que qqueremos marcaar como  compltado\n                        // recordar que sin funcion de flecha la funcion se ejecutaria auatomaticamente por recibir un argumento y eso no lo queremos\n                        className='btn btn-sm btn-outline-success ml-2'>\n                        onClick={() => todoToogleCompleted(todo.id)}\n                        Terminar\n                    </button>\n                </h3>\n                <p className='card-text text-right'>\n                    {todo.description}\n                </p>\n                <hr />\n                <div className='d-flex justify-content-end'>\n                    <button className='btn btn-sm btn-outline-primary'>\n                        Editar\n                    </button>\n                    <button\n                        //llamamos al todoDelete que es una funcion que recibe un argumento si vemos en App recibe el id del todo que vamos a eliminar\n                        // y aca lo tenemos dentro del props todo\n                        onClick={() => todoDelete(todo.id)}\n                        // ahora no se ven los todos y es por que cucando llamammos una funcion que recibe un argumento se ejecuta automaticamente una vez\n                        // si fuese una funcion sin argumento nos pasria esto pero necesitamos enviar ese argumento y la solucion es retornar un arrowfunction que devuelva esta otra funcion(la que acabamos de escribir) \n                        className='btn btn-sm btn-outline-danger'>\n\n                        Eliminar\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Todo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,OAAyD;EAAA,IAA3C;IAAEC,IAAF;IAAQC,UAAR;IAAoBC;EAApB,CAA2C;EAAE;EACvD;EACA;EAEA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,uBACI;MAAK,SAAS,EAAC,YAAf;MAAA,wBACI;QAAI,SAAS,EAAC,uBAAd;QAAA,WACKF,IAAI,CAACG,KADV,eAEI;UACI;UACA;UACA,SAAS,EAAC,qCAHd;UAAA,uBAIa,MAAMD,mBAAmB,CAACF,IAAI,CAACI,EAAN,CAJtC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI;QAAG,SAAS,EAAC,sBAAb;QAAA,UACKJ,IAAI,CAACK;MADV;QAAA;QAAA;QAAA;MAAA,QAXJ,eAcI;QAAA;QAAA;QAAA;MAAA,QAdJ,eAeI;QAAK,SAAS,EAAC,4BAAf;QAAA,wBACI;UAAQ,SAAS,EAAC,gCAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UACI;UACA;UACA,OAAO,EAAE,MAAMJ,UAAU,CAACD,IAAI,CAACI,EAAN,CAH7B,CAII;UACA;UALJ;UAMI,SAAS,EAAC,+BANd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAfJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmCH;;KAvCQL,I;AAyCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}