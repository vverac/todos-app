{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList'; // esto lo trajimos desde TodoList\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  id: 1,\n  title: 'todo #1',\n  description: 'Descripcion Todo #1',\n  complete: false\n}, {\n  id: 2,\n  title: 'todo #2',\n  description: 'Descripcion Todo #2',\n  complete: true\n}];\n\nfunction App() {\n  _s();\n\n  // esto lo trajimos desde TodoList\n  const [todos, setTodos] = useState(initialTodos); // aca crearemos una funcion que nos permita eliminar, quqe sera funcion flecha que recibe el id del todo que vamos a eliminar\n\n  const todoDelete = todoId => {\n    const changedTodos = todos.filter(todo => todo.id !== todoId);\n    setTodos(changedTodos);\n  }; // creamos otra accion o funcion, que sera intermitente entre estado completado y no completado, \n  // al darle click debe cambiar entre uno y otro, recibira un todoId para saber donde se hara la modificacion\n  // recordar que no podemos mutar el estado\n\n\n  const todoToogleCompleted = () => {\n    const changedTodos = todos.setTodos(changedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: [/*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          todoDelete: todoDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"8yCmoPUuqM1vaUbV/+pWostrM30=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoForm","TodoList","initialTodos","id","title","description","complete","App","todos","setTodos","todoDelete","todoId","changedTodos","filter","todo","todoToogleCompleted"],"sources":["/Users/viviana/Desktop/ejercicios/todo-app/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react'\nimport TodoForm from './components/TodoForm'\nimport TodoList from './components/TodoList'\n\n// esto lo trajimos desde TodoList\nconst initialTodos = [\n    {\n        id: 1,\n        title: 'todo #1',\n        description: 'Descripcion Todo #1',\n        complete: false,\n    },\n    {\n        id: 2,\n        title: 'todo #2',\n        description: 'Descripcion Todo #2',\n        complete: true,\n    }\n]\n\nfunction App() {\n    // esto lo trajimos desde TodoList\n    const [todos, setTodos] = useState(initialTodos)\n\n    // aca crearemos una funcion que nos permita eliminar, quqe sera funcion flecha que recibe el id del todo que vamos a eliminar\n    const todoDelete = (todoId) => {\n        const changedTodos = todos.filter(todo => todo.id !== todoId)\n        setTodos(changedTodos);\n    }\n    // creamos otra accion o funcion, que sera intermitente entre estado completado y no completado, \n    // al darle click debe cambiar entre uno y otro, recibira un todoId para saber donde se hara la modificacion\n    // recordar que no podemos mutar el estado\n    const todoToogleCompleted = () => {\n\n        const changedTodos = todos.\n            setTodos(changedTodos)\n    }\n\n    return (\n        <div className='container mt-4'>\n            <div className='row'>\n                <div className='col-8'>\n                    <TodoList\n                        todos={todos}\n                        todoDelete={todoDelete} />  {/* la recibimos como todoDelete y la enviamos como {todoDelete} ahora vamos al TodoList y recimos la funcion como parametro */}\n\n                </div>\n                <div className='col-4'>\n                    <TodoForm />\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default App"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,CADR;EAEIC,KAAK,EAAE,SAFX;EAGIC,WAAW,EAAE,qBAHjB;EAIIC,QAAQ,EAAE;AAJd,CADiB,EAOjB;EACIH,EAAE,EAAE,CADR;EAEIC,KAAK,EAAE,SAFX;EAGIC,WAAW,EAAE,qBAHjB;EAIIC,QAAQ,EAAE;AAJd,CAPiB,CAArB;;AAeA,SAASC,GAAT,GAAe;EAAA;;EACX;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACG,YAAD,CAAlC,CAFW,CAIX;;EACA,MAAMQ,UAAU,GAAIC,MAAD,IAAY;IAC3B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYQ,MAAjC,CAArB;IACAF,QAAQ,CAACG,YAAD,CAAR;EACH,CAHD,CALW,CASX;EACA;EACA;;;EACA,MAAMG,mBAAmB,GAAG,MAAM;IAE9B,MAAMH,YAAY,GAAGJ,KAAK,CACtBC,QADiB,CACRG,YADQ,CAArB;EAEH,CAJD;;EAMA,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAK,SAAS,EAAC,OAAf;QAAA,wBACI,QAAC,QAAD;UACI,KAAK,EAAEJ,KADX;UAEI,UAAU,EAAEE;QAFhB;UAAA;UAAA;UAAA;QAAA,QADJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI;QAAK,SAAS,EAAC,OAAf;QAAA,uBACI,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GAnCQH,G;;KAAAA,G;AAqCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}