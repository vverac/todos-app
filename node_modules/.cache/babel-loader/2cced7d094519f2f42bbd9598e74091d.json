{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/todo-app/src/components/TodoList.js\";\n// ahora crearemos funciones quqe nos permitan marcar una tarea como terminada, editar, eliminar\n// para ello tenemos que hacer comunicacin entre componentes, es decir de el componente TodoForm que necesito llenar este formulario que al precionar un boton se va a guardar y esta nueva tarea que se guarda\n// quiero mostrarla en TodoList, entonces para comunicar estos componentes tengo que utilizar un manejador de estado como: redux, context o useReducer, pero lo haremos manejando todos esos estados globales desde un punto alto\n//  de nuestra aplicacion, en este caso  la lista de tareas estos todos(estados) ,lo haremos desde App.js\nimport React, { useState } from 'react';\nimport Todo from './Todo'; // const initialTodos = [\n//     {\n//         id: 1, //agregamos id por en mensaje de error en consola\n//         title: 'todo #1',\n//         description: 'Descripcion Todo #1',\n//         complete: false,\n//     },\n//     {\n//         id: 2, //agregamos id por en mensaje de error en consola\n//         title: 'todo #2',\n//         description: 'Descripcion Todo #2',\n//         complete: true,\n//     }\n// ]\n// nos llevamos esto a App\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(_ref) {\n  let {\n    todos,\n    todoDelete\n  } = _ref;\n  //  recibimos la funcion todoDelete que viene desde App de aqui se la enviamos a cada todo y se la pasamos al componente Todo ver mas abajo\n  // const [todos, setTodos] = useState(initialTodos)\n  // nos llevamos a App\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo,\n      todoDelete: todoDelete\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","Todo","TodoList","todos","todoDelete","map","todo","id"],"sources":["/Users/viviana/Desktop/ejercicios/todo-app/src/components/TodoList.js"],"sourcesContent":["// ahora crearemos funciones quqe nos permitan marcar una tarea como terminada, editar, eliminar\n// para ello tenemos que hacer comunicacin entre componentes, es decir de el componente TodoForm que necesito llenar este formulario que al precionar un boton se va a guardar y esta nueva tarea que se guarda\n// quiero mostrarla en TodoList, entonces para comunicar estos componentes tengo que utilizar un manejador de estado como: redux, context o useReducer, pero lo haremos manejando todos esos estados globales desde un punto alto\n//  de nuestra aplicacion, en este caso  la lista de tareas estos todos(estados) ,lo haremos desde App.js\nimport React, { useState } from 'react'\nimport Todo from './Todo'\n\n// const initialTodos = [\n//     {\n//         id: 1, //agregamos id por en mensaje de error en consola\n//         title: 'todo #1',\n//         description: 'Descripcion Todo #1',\n//         complete: false,\n//     },\n//     {\n//         id: 2, //agregamos id por en mensaje de error en consola\n//         title: 'todo #2',\n//         description: 'Descripcion Todo #2',\n//         complete: true,\n//     }\n// ]\n// nos llevamos esto a App\n\nfunction TodoList({ todos, todoDelete }) { //  recibimos la funcion todoDelete que viene desde App de aqui se la enviamos a cada todo y se la pasamos al componente Todo ver mas abajo\n    // const [todos, setTodos] = useState(initialTodos)\n    // nos llevamos a App\n\n    return (\n        <div>\n            <h1>TodoList</h1>\n            {\n                todos.map(todo => (\n                    <Todo\n                        todo={todo}\n                        key={todo.id}\n                        todoDelete={todoDelete}\n\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default TodoList\n\n\n\n\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,OAAyC;EAAA,IAAvB;IAAEC,KAAF;IAASC;EAAT,CAAuB;EAAE;EACvC;EACA;EAEA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAGQD,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACV,QAAC,IAAD;MACI,IAAI,EAAEA,IADV;MAGI,UAAU,EAAEF;IAHhB,GAESE,IAAI,CAACC,EAFd;MAAA;MAAA;MAAA;IAAA,QADJ,CAHR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;KAnBQL,Q;AAqBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}