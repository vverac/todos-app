{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/todo-app/src/components/TodoList.js\";\nimport React from 'react';\nimport Todo from './Todo'; //props\n// creamos estas props(objetos de tareas) por queremos que cada todo muestre informacion diferente \n// const todo1 = {\n//     title: 'todo #1',\n//     description: 'Descripcion Todo #1',\n//     complete: false,\n// }\n// const todo2 = {\n//     title: 'todo #2',\n//     description: 'Descripcion Todo #2',\n//     complete: true,\n// }\n// aca haremos qu cada todo forme parte de una lista quqe sera un arreglo dond el primer elemnto sera el todo1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todos = [{\n  title: 'todo #1',\n  description: 'Descripcion Todo #1',\n  complete: false\n}, {\n  title: 'todo #2',\n  description: 'Descripcion Todo #2',\n  complete: true\n}]; //  ahora como renderizamos esta lista de todods en nuestro componente? primero quedaremos con 1 solo todo\n\nfunction TodoList() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","Todo","todos","title","description","complete","TodoList"],"sources":["/Users/viviana/Desktop/ejercicios/todo-app/src/components/TodoList.js"],"sourcesContent":["import React from 'react'\nimport Todo from './Todo'\n\n\n\n//props\n// creamos estas props(objetos de tareas) por queremos que cada todo muestre informacion diferente \n// const todo1 = {\n//     title: 'todo #1',\n//     description: 'Descripcion Todo #1',\n//     complete: false,\n// }\n// const todo2 = {\n//     title: 'todo #2',\n//     description: 'Descripcion Todo #2',\n//     complete: true,\n// }\n\n// aca haremos qu cada todo forme parte de una lista quqe sera un arreglo dond el primer elemnto sera el todo1\nconst todos = [\n\n    {\n        title: 'todo #1',\n        description: 'Descripcion Todo #1',\n        complete: false,\n    },\n    {\n        title: 'todo #2',\n        description: 'Descripcion Todo #2',\n        complete: true,\n    }\n\n]\n//  ahora como renderizamos esta lista de todods en nuestro componente? primero quedaremos con 1 solo todo\n\n\nfunction TodoList() {\n    return (\n        <div>\n            <h1>TodoList</h1>\n            {/* <Todo todo={todo1} />\n                // aca tenemos una propiedad todo y recibe el contenido del objeto todo1\n                //    enviamos todo de este componente padre\n\n                //  despues de dejar  solo un todo  ecribiremos una sentencia de js, para recorrer para recorrer nuestro objeto */}\n\n\n\n            {/* // en el componente Todo enviamos cada uno de los todo que son sobre los que estamos iterando */}\n\n\n            {/* <Todo\n                // aca tenemos una propiedad todo y recibe el contenido del objeto todo2, tambien tenemos que modificar el componete\n                todo={todo2} /> */}\n\n        </div>\n    )\n}\n\nexport default TodoList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAMC,KAAK,GAAG,CAEV;EACIC,KAAK,EAAE,SADX;EAEIC,WAAW,EAAE,qBAFjB;EAGIC,QAAQ,EAAE;AAHd,CAFU,EAOV;EACIF,KAAK,EAAE,SADX;EAEIC,WAAW,EAAE,qBAFjB;EAGIC,QAAQ,EAAE;AAHd,CAPU,CAAd,C,CAcA;;AAGA,SAASC,QAAT,GAAoB;EAChB,oBACI;IAAA,uBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH;;KArBQA,Q;AAuBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}