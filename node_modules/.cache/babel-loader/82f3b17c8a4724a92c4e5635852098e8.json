{"ast":null,"code":"var _jsxFileName = \"/Users/viviana/Desktop/ejercicios/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// haciendo nuestra aplicacion persistente esto se refiere a que cuando se recargue la pagina el estado anterior se siga manteniendo por lo menos con llos todos\n// asi haremos persistentes el estado de los todos , para ello usaremos el localstorage y lo hacemos aca en el app.js\nimport React, { useEffect, useState } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  id: 1,\n  title: 'todo #1',\n  description: 'Descripcion Todo #1',\n  completed: false\n}, {\n  id: 2,\n  title: 'todo #2',\n  description: 'Descripcion Todo #2',\n  completed: true\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(initialTodos);\n  const [todoEdit, setTodoEdit] = useState(null); // crearemos un nuevo effect que debemos importarlo antes\n  // esto recibe el arreglo de dependencias y la funcion que se va a ejecutar cuando una de esas dependencias cambie\n  // pero que dependencias va a escuchar este efecto, que es lo que queremos hacer , uqe cada vez que los todos sean diferentes se grabe en localstorage un valor actualizado\n  // de los todos, por lo tanto nuestras dependencias deben ser los todos\n  // revisemos la seccion de aplicacion en las herramientas del desarrollador donde hay una seccion que dice almacenamiento ahi va,os al localhost3000 que es en la direccion que estamos trabajando en este momento\n  // aca comenzaremos grabando los todos cada vez que se actualicen\n\n  useEffect(() => {\n    localStorage.setItem('todos', todos);\n  }, [todos]);\n\n  const todoDelete = todoId => {\n    if (todoEdit && todoId === todoEdit.id) {\n      setTodoEdit(null);\n    }\n\n    const changedTodos = todos.filter(todo => todo.id !== todoId);\n    setTodos(changedTodos);\n  };\n\n  const todoToogleCompleted = todoId => {\n    const changedTodos = todos.map(todo => todo.id === todoId ? { ...todo,\n      completed: !todo.completed\n    } : todo);\n    setTodos(changedTodos);\n  };\n\n  const todoAdd = todo => {\n    const newTodo = {\n      id: Date.now(),\n      ...todo,\n      completed: false\n    };\n    const changedTodos = [newTodo, ...todos];\n    setTodos(changedTodos);\n  }; // creando nuestra funcion para actualizar\n\n\n  const todoUpdate = todoEdit => {\n    const changedTodos = todos.map(todo => todo.id === todoEdit.id ? todoEdit : todo);\n    setTodos(changedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          todoDelete: todoDelete,\n          todoToogleCompleted: todoToogleCompleted,\n          setTodoEdit: setTodoEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(TodoForm // estados\n        , {\n          todoEdit: todoEdit // funciones\n          ,\n          todoAdd: todoAdd,\n          todoUpdate: todoUpdate,\n          setTodoEdit: setTodoEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"eGb+AB4qjeJV51TAygRMj89bzco=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TodoForm","TodoList","initialTodos","id","title","description","completed","App","todos","setTodos","todoEdit","setTodoEdit","localStorage","setItem","todoDelete","todoId","changedTodos","filter","todo","todoToogleCompleted","map","todoAdd","newTodo","Date","now","todoUpdate"],"sources":["/Users/viviana/Desktop/ejercicios/todo-app/src/App.js"],"sourcesContent":["// haciendo nuestra aplicacion persistente esto se refiere a que cuando se recargue la pagina el estado anterior se siga manteniendo por lo menos con llos todos\n// asi haremos persistentes el estado de los todos , para ello usaremos el localstorage y lo hacemos aca en el app.js\n\nimport React, { useEffect, useState } from 'react'\nimport TodoForm from './components/TodoForm'\nimport TodoList from './components/TodoList'\n\n\nconst initialTodos = [\n    {\n        id: 1,\n        title: 'todo #1',\n        description: 'Descripcion Todo #1',\n        completed: false,\n    },\n    {\n        id: 2,\n        title: 'todo #2',\n        description: 'Descripcion Todo #2',\n        completed: true,\n    }\n]\n\nfunction App() {\n    const [todos, setTodos] = useState(initialTodos)\n    const [todoEdit, setTodoEdit] = useState(null)\n\n    // crearemos un nuevo effect que debemos importarlo antes\n    // esto recibe el arreglo de dependencias y la funcion que se va a ejecutar cuando una de esas dependencias cambie\n    // pero que dependencias va a escuchar este efecto, que es lo que queremos hacer , uqe cada vez que los todos sean diferentes se grabe en localstorage un valor actualizado\n    // de los todos, por lo tanto nuestras dependencias deben ser los todos\n    // revisemos la seccion de aplicacion en las herramientas del desarrollador donde hay una seccion que dice almacenamiento ahi va,os al localhost3000 que es en la direccion que estamos trabajando en este momento\n    // aca comenzaremos grabando los todos cada vez que se actualicen\n    useEffect(() => {\n\n        localStorage.setItem('todos', todos)\n\n    }, [todos])\n\n\n\n    const todoDelete = (todoId) => {\n\n        if (todoEdit && todoId === todoEdit.id) {\n            setTodoEdit(null)\n        }\n        const changedTodos = todos.filter(todo => todo.id !== todoId)\n        setTodos(changedTodos);\n    }\n\n    const todoToogleCompleted = (todoId) => {\n        const changedTodos = todos.map(todo => todo.id === todoId ? { ...todo, completed: !todo.completed } : todo)\n\n        setTodos(changedTodos)\n    }\n\n    const todoAdd = (todo) => {\n\n        const newTodo = {\n            id: Date.now(),\n            ...todo,\n            completed: false\n        }\n        const changedTodos = [\n            newTodo,\n            ...todos,\n\n        ]\n\n        setTodos(changedTodos)\n    }\n\n\n\n    // creando nuestra funcion para actualizar\n    const todoUpdate = (todoEdit) => {\n        const changedTodos = todos.map(todo => (\n            todo.id === todoEdit.id\n                ? todoEdit\n                : todo\n        ))\n\n        setTodos(changedTodos)\n    }\n\n    return (\n        <div className='container mt-4'>\n            <div className='row'>\n                <div className='col-8'>\n                    <TodoList\n                        todos={todos}\n                        todoDelete={todoDelete}\n                        todoToogleCompleted={todoToogleCompleted}\n                        setTodoEdit={setTodoEdit}\n                    />\n                </div>\n                <div className='col-4'>\n                    <TodoForm\n                        // estados\n                        todoEdit={todoEdit}\n                        // funciones\n                        todoAdd={todoAdd}\n                        todoUpdate={todoUpdate}\n                        setTodoEdit={setTodoEdit}\n                    />\n\n\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}